# ################################
# Create an OSEv3 group that contains the masters and nodes groups
# This is for 3 hosts - uses the labnet interfaces (no internal openshift network)
[OSEv3:children]
masters
nodes
etcd

[OSEv3:vars]
###############################################################################
# Common/ Required configuration variables follow                             #
###############################################################################
# SSH user, this user should allow ssh based auth without requiring a
# password. If using ssh key based auth, then the key should be managed by an
# ssh agent.
ansible_user=root

# If ansible_user is not root, ansible_become must be set to true and the
# user must be configured for passwordless sudo
#ansible_become=yes

# Specify the deployment type. Valid values are origin and openshift-enterprise.
#openshift_deployment_type=origin
openshift_deployment_type=openshift-enterprise

# Specify the generic release of OpenShift to install. This is used mainly just during installation, after which we
# rely on the version running on the first master. Works best for containerized installs where we can usually
# use this to lookup the latest exact version of the container images, which is the tag actually used to configure
# the cluster. For RPM installations we just verify the version detected in your configured repos matches this
# release.
openshift_release=v3.10

# default subdomain to use for exposed routes, you should have wildcard dns
# for *.apps.test.example.com that points at your infra nodes which will run
# your router
openshift_master_default_subdomain=apps.test.example.com

#Set cluster_hostname to point at your load balancer
#openshift_master_cluster_hostname=ose3-lb.test.example.com


# SSH user, this user should allow ssh based auth without requiring a password
#ansible_ssh_user=root
#openshift_auth_type=allowall
#openshift_clock_enabled=true
#openshift_use_dnsmasq=true
#skip_verison=true
#openshift_release=3.10

oreg_url=brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-${component}:${version}
openshift_docker_additional_registries=brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888,registry.ops.openshift.com
openshift_docker_insecure_registries=brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888,registry.ops.openshift.com

# If ansible_ssh_user is not root, ansible_sudo must be set to true
#ansible_sudo=true

# OCP/OSE puddle
#Version 3.10
openshift_additional_repos=[{'id': 'AtomicOpenShift-3.10-Puddle', 'name': 'AtomicOpenShift-3.10-Puddle', 'baseurl': 'http://download.lab.bos.redhat.com/rcm-guest/puddles/RHAOS/AtomicOpenShift/3.10/latest/x86_64/os', 'enabled': 1, 'gpgcheck': 0}]

# Allow all auth
openshift_master_identity_providers=[{'name': 'allow_all', 'login': 'true', 'challenge': 'true', 'kind': 'AllowAllPasswordIdentityProvider'}]

# kublet args
# openshift_node_kubelet_args={'max-pods':['4096']}

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
# os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
# Configure the cni-ovn plugin
os_sdn_network_plugin_name='cni'

# host group for masters
[masters]
wsfd-netdev22.ntdv.lab.eng.bos.redhat.com

[etcd]
wsfd-netdev22.ntdv.lab.eng.bos.redhat.com

# host group for nodes, includes region info
[nodes]
wsfd-netdev22.ntdv.lab.eng.bos.redhat.com openshift_node_labels="{'region': 'infra', 'zone': 'default'}"

wsfd-netdev28.ntdv.lab.eng.bos.redhat.com openshift_node_labels="{'region': 'infra', 'zone': 'north'}"

wsfd-netdev35.ntdv.lab.eng.bos.redhat.com openshift_node_labels="{'region': 'infra', 'zone': 'south'}"

